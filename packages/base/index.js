module.exports = {
  env: {
    es6: true,
    node: true,
    browser: true,
  },
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  plugins: ['prettier'],
  extends: ['eslint:recommended', 'plugin:prettier/recommended'],
  rules: {
    semi: ['error', 'always'],
    indent: ['error', 2],
    quotes: ['error', 'single'],
    'quote-props': ['error', 'consistent-as-needed'],
    'max-len': ['error', { code: 180, comments: 0 }],
    radix: ['error', 'as-needed'],
    camalcase: 'off',
    'comma-spacing': ['error', { before: false, after: true }],
    'comma-style': ['error', 'last'],
    'comma-dangle': ['error', 'always-multiline'],
    'brace-style': ['error', '1tbs', { allowSingleLine: true }],
    'func-call-spacing': ['error', 'never'],
    'space-before-function-paren': 'error',
    'quote-props': ['error', 'as-needed'],
    eqeqeq: ['error', 'smart'],
    'no-debugger': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'warn',
    'no-console': ['error', { allow: ['warn', 'error'] }],
    'object-shorthand': [
      'error',
      'always',
      {
        ignoreConstructors: false,
        avoidQuotes: true,
      },
    ],
    'no-var': 'error',
    'prefer-const': [
      'error',
      {
        destructuring: 'all',
        ignoreReadBeforeAssign: true,
      },
    ],
    'prefer-arrow-callback': [
      'error',
      {
        allowedNamedFunctions: false,
        allowUnboundThis: true,
      },
    ],
    'arrow-parens': ['error', 'as-needed', { requireForBlockBody: true }],
    'prefer-exponentiation-operator': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'spaced-comment': [
      'error',
      'always',
      {
        line: {
          markers: ['/'],
          exceptions: ['/', '#'],
        },
        block: {
          markers: ['!'],
          exceptions: ['*'],
          balanced: true,
        },
      },
    ],
    complexity: ['off', 11],
    'block-scoped-var': 'error',
    'consistent-return': 'error',
    'no-return-assign': 'off',
    'require-await': 'off',
    'no-multi-str': 'error',
    'no-with': 'error',
    'no-void': 'error',
    'operator-linebreak': ['error', 'before'],
    'no-case-declarations': 'error',
    'max-statements-per-line': ['error', { max: 1 }],
    'key-spacing': ['error', { beforeColon: false, afterColon: true }],
    'keyword-spacing': ['error', { before: true, after: true }],
    'lines-between-class-members': 'off',
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: '*', next: 'return' },
      { blankLine: 'always', prev: ['const', 'let', 'var'], next: '*' },
      {
        blankLine: 'any',
        prev: ['const', 'let', 'var'],
        next: ['const', 'let', 'var'],
      },
      { blankLine: 'always', prev: ['case', 'default'], next: '*' },
      {
        blankLine: 'always',
        prev: '*',
        next: ['function', 'if', 'try', 'break', 'class', 'for', 'while', 'do'],
      },
    ],
    'prettier/prettier': [
      'error',
      { singleQuote: true, trailingComma: 'all', tabWidth: 2 },
    ],
  },
};
